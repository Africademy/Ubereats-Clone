- table:
    schema: public
    name: food_categories
  array_relationships:
  - name: foods
    using:
      foreign_key_constraint_on:
        column: category_uuid
        table:
          schema: public
          name: foods
  select_permissions:
  - role: user
    permission:
      columns:
      - uuid
      - name
      - photo
      filter: {}
- table:
    schema: public
    name: food_details
  object_relationships:
  - name: food
    using:
      foreign_key_constraint_on: food_uuid
  select_permissions:
  - role: user
    permission:
      columns:
      - uuid
      - photo
      - food_uuid
      filter: {}
- table:
    schema: public
    name: foods
  object_relationships:
  - name: food_category
    using:
      foreign_key_constraint_on: category_uuid
  array_relationships:
  - name: food_details
    using:
      foreign_key_constraint_on:
        column: food_uuid
        table:
          schema: public
          name: food_details
  - name: order_foods
    using:
      foreign_key_constraint_on:
        column: food_uuid
        table:
          schema: public
          name: order_foods
  select_permissions:
  - role: user
    permission:
      columns:
      - category_uuid
      - description
      - name
      - photo
      - price
      - uuid
      filter: {}
- table:
    schema: public
    name: inventories
  object_relationships:
  - name: restaurant
    using:
      foreign_key_constraint_on: restaurant_uuid
- table:
    schema: public
    name: order_foods
  object_relationships:
  - name: food
    using:
      foreign_key_constraint_on: food_uuid
  - name: order
    using:
      foreign_key_constraint_on: order_uuid
  insert_permissions:
  - role: user
    permission:
      check:
        order:
          user_id:
            _eq: X-Hasura-User-Id
      columns:
      - uuid
      - food_uuid
      - order_uuid
      - count
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - count
      - food_uuid
      - uuid
      filter: {}
- table:
    schema: public
    name: order_status
  is_enum: true
- table:
    schema: public
    name: orders
  object_relationships:
  - name: user
    using:
      foreign_key_constraint_on: user_id
  array_relationships:
  - name: order_foods
    using:
      foreign_key_constraint_on:
        column: order_uuid
        table:
          schema: public
          name: order_foods
  insert_permissions:
  - role: user
    permission:
      check:
        user_id:
          _eq: X-Hasura-User-Id
      columns:
      - uuid
      - user_id
      - created_at
      - status
      - updated_at
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - uuid
      - user_id
      - created_at
      - status
      - updated_at
      filter:
        user_id:
          _eq: X-Hasura-User-Id
  delete_permissions:
  - role: user
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: restaurants
  array_relationships:
  - name: inventories
    using:
      foreign_key_constraint_on:
        column: restaurant_uuid
        table:
          schema: public
          name: inventories
- table:
    schema: public
    name: users
  array_relationships:
  - name: orders
    using:
      foreign_key_constraint_on:
        column: user_id
        table:
          schema: public
          name: orders
  select_permissions:
  - role: user
    permission:
      columns:
      - id
      - email
      - first_name
      - last_name
      filter:
        id:
          _eq: X-Hasura-User-Id
